import time, re, telebot, random
import urllib
import urllib.request
from urllib.request import Request
import sqlite3
import database, config

STOP_SPAM = False

commands = {
    '‚ñ´Ô∏è /stats' 	  	: '–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ñ–ª—É–¥–µ—Ä–∞—Å—Ç–æ–≤ –∏–∑ —á–∞—Ç–∞',
    '‚ñ´Ô∏è /finish_him' 	  	: '–û—Å–∫–æ—Ä–±–∏—Ç—å –∂–µ—Ä—Ç–≤—É, –ø—Ä–∏–º–µ—Ä: /finish_him @Victim',
    '‚ñ´Ô∏è /corona' 	  	    : '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –≤ –º–∏—Ä–µ üåé',
    '‚ñ´Ô∏è /corona_uk' 	  	: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –≤ –£–∫—Ä–∞–∏–Ω–µ üá∫üá¶',
    '‚ñ´Ô∏è /corona_ru' 	  	: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –≤ –†–æ—Å—Å–∏–∏ üá∑üá∫',
    'üî∏ /spam' 	  	        : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∞–º —Å–æ–æ–±—â–µ–Ω–∏—è, /spam [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] [—Ç–µ–∫—Å—Ç]üî∏',
    'üî∏ /stop_spam' 		: '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–ºüî∏',
    '‚ñ´Ô∏è/whoisyourdaddy' 	: '–£–∑–Ω–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞',
    'üî∏ /showpic' 		    : 'üö´üå∂üçì –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ —á–∞—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É —Å 18+ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–ºüî∏',
    'üî∏ /showgif' 		    : 'üö´üå∂üçì –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ —á–∞—Ç –≥–∏—Ñ–∫—É —Å 18+ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–ºüî∏',
    '‚ñ´Ô∏è /saysome' 		    : '–°–∫–∞–∑–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—É—é —Ñ—Ä–∞–∑—É',
    '‚ñ´Ô∏è /admins' 		    : '–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤',
    '‚ñ´Ô∏è /banlist' 		    : '–°–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω—ã—Ö',
    'üî∫ /add' 		        : '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞',
    'üî∫ /remove' 		    : '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞',
}

def isOwner(user):
    if user == "Llne_R":
        return True
    else:
        return False

database.createBOT_DB()
database.createChatStatDB()

banned_text = ["—Ç—ã –≤ –±–∞–Ω–µ, –ø–∏–∑–¥—É–π –æ—Ç—Å—é–¥–∞",
    "–µ–±–ª–∞–Ω, —Ç–µ–ø–µ—Ä—å —Ç—ã –∑–∞–±–∞–Ω–µ–Ω",
    "–∑–∞—Ç–Ω–∏—Å—å, —Ç–µ–±–µ —Å–ª–æ–≤–∞ –Ω–µ –¥–∞–≤–∞–ª–∏",
    "—á–º–æ –µ–±–∞–Ω–æ–µ",
    "—É–º–æ–ª—è–π, —á—Ç–æ –±—ã —è —Ç–µ–±—è —Ä–∞–∑–±–∞–Ω–∏–ª",
    "—Ç—É–ø–æ–π –¥–µ–±–∏–ª",
    "–¥–æ–ª–±–æ–µ–±, —Ç—ã –∑–∞–±–∞–Ω–µ–Ω"]
def listener(messages):
    for m in messages:
        if m.from_user.username is not None:
            if database.check_if_STAT_exist(m.from_user.username) == True:
                database.update_STAT_DB([m.from_user.username, str(int(database.get_STAT_count(m.from_user.username))+1)])
            else:
                database.insert_to_STAT_DB([m.from_user.username, '1'])
            if database.checkUser("banned", m.from_user.username) == True:
                bot.send_message(m.chat.id, "@" + m.from_user.username + ", " + random.choice(banned_text),
                             getMAT("@" + m.from_user.username))


bot = telebot.TeleBot(config.TOKEN)
bot.set_update_listener(listener)



@bot.message_handler(commands=["admins"])
def answer(message):
    cid = message.chat.id
    time.sleep(2)
    bot.send_message(cid, "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤:\n"+database.getAdmins())

@bot.message_handler(commands=["stats"])
def answer(message):
    cid = message.chat.id
    time.sleep(2)
    bot.send_message(cid, "–°–ø–∏—Å–æ–∫ —Ñ–ª—É–¥–µ—Ä–∞—Å—Ç–æ–≤:\n---------------------\n"+database.get_STAT(), parse_mode= 'Markdown')


@bot.message_handler(commands=["banlist"])
def answer(message):
    cid = message.chat.id
    time.sleep(2)
    bot.send_message(cid, "–°–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω—ã—Ö:\n"+database.getBanned())

@bot.message_handler(commands=["add"])
def answer(message):
    cid = message.chat.id
    time.sleep(2)
    if isOwner(message.from_user.username) == True:
        database.insert_to_BOT_DB("admins", message.text.split(maxsplit=1)[1].replace("@", ""))
        bot.send_message(cid, "–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω")
        bot.send_message(cid, "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤:\n"+database.getAdmins())
    else:
        bot.send_message(cid, "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è")

@bot.message_handler(commands=["remove"])
def answer(message):
    cid = message.chat.id
    time.sleep(2)
    if isOwner(message.from_user.username) == True:
        database.delete_from_BOT_DB("admins", message.text.split(maxsplit=1)[1].replace("@", ""))
        bot.send_message(cid, message.text.split(maxsplit=1)[1]+" –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω")
        bot.send_message(cid, "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤:\n"+database.getAdmins())
    else:
        bot.send_message(cid, "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è")

@bot.message_handler(commands=["ban_him"])
def answer(message):
    cid = message.chat.id
    time.sleep(2)
    if isOwner(message.from_user.username) == True:
        database.insert_to_BOT_DB("banned", message.text.split(maxsplit=1)[1].replace("@", ""))
        bot.send_message(cid, "–ó–∞–±–∞–Ω–∏–ª, —Ç–µ–ø–µ—Ä—å –µ–º—É –ø–∏–∑–¥–µ—Ü")
    else:
        bot.send_message(cid, "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è")

@bot.message_handler(commands=["unban_him"])
def answer(message):
    cid = message.chat.id
    time.sleep(2)
    if isOwner(message.from_user.username) == True:
        database.delete_from_BOT_DB("banned", message.text.split(maxsplit=1)[1].replace("@", ""))
        bot.send_message(cid, message.text.split(maxsplit=1)[1]+" –±–æ–ª—å—à–µ –Ω–µ –≤ –±–∞–Ω–µ")
    else:
        bot.send_message(cid, "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è")

@bot.message_handler(commands=['help'])
def command_help(m):
    cid = m.chat.id
    help_text = "\n"
    for key in commands:
        help_text += key + ": "
        help_text += commands[key] + "\n----------------------\n"
    help_text += "‚ñ´ - –¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–º \nüî∏ - –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º\nüî∫ - –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é"
    bot.send_message(m.chat.id, "–ü—Ä–∏–≤–µ—Ç, " + str(m.from_user.username) + " —Ä–∞–¥ —Å–Ω–æ–≤–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å. –í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:\n" + help_text)

@bot.message_handler(commands=["spam"])
def answer(message):
    try:
        global STOP_SPAM
        chat_id = message.chat.id
        amount = message.text.split(maxsplit=2)[1]
        spam_text = message.text.split(maxsplit=2)[2]
        if database.checkUser("admins",message.from_user.username) == True:
            if checkUserInString("admins", spam_text) == False:
                if isOwner(message.from_user.username) == True:
                    for i in range(0, int(amount)):
                        if STOP_SPAM == True:
                            STOP_SPAM = False
                            break
                        else:
                            time.sleep(0.5)
                            bot.send_message(chat_id, ""+spam_text)
                else:
                    if int(amount) < 101:
                        for i in range(0, int(amount)):
                            if STOP_SPAM == True:
                                STOP_SPAM = False
                                break
                            else:
                                time.sleep(2)
                                bot.send_message(chat_id, ""+spam_text)
                    else:
                        bot.send_message(chat_id, "–ú–∞–∫—Å–∏–º—É–º, 50")
            else:
                bot.send_message(chat_id, "–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –∞–¥–º–∏–Ω–æ–≤ :)")
        
        else:
            bot.send_message(chat_id, "–í—ã –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–≤—Ç–æ—Ä—é —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ :)")
            if checkUserInString("admins", spam_text) == False:
                time.sleep(2)
                bot.send_message(chat_id, ""+spam_text)
            else:
                bot.send_message(chat_id, "–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –∞–¥–º–∏–Ω–æ–≤ :)")
    except:
        bot.send_message(chat_id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /spam [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] [—Ç–µ–∫—Å—Ç]")

@bot.message_handler(commands=["stop_spam"])
def answer(message):
    global STOP_SPAM
    if database.checkUser("admins", message.from_user.username) == True:
        STOP_SPAM = True
    else:
        bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º")

@bot.message_handler(commands=["corona"])
def answer(message):
    req = Request("https://www.worldometers.info/coronavirus", headers={'User-Agent': 'Mozilla/5.0'})
    resource = urllib.request.urlopen(req)
    content =  resource.read().decode(resource.headers.get_content_charset())
    corona_cases_count = re.search(r'Coronavirus Cases:[a-zA-Z<>\": 0-9\/\n=\-#]*>([0-9, ]*)<', content).group(1)
    corona_death_count = re.search(r'Deaths:[a-zA-Z<>\": 0-9\/\n=\-#]*>([0-9, ]*)<', content).group(1)
    corona_survive_count = re.search(r'Recovered:[a-zA-Z<>\": 0-9\/\n=\-#]*>([0-9, ]*)<', content).group(1)
    result = "–°–∏—Ç—É–∞—Ü–∏—è –≤ üåé –º–∏—Ä–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n"
    result += "ü¶† –ó–∞—Ä–∞–∂–µ–Ω–æ: "+corona_cases_count+"\n"
    result += "‚ò† –£–º–µ—Ä–ª–æ: "+corona_death_count+"\n"
    result += "Ôºã –í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: "+corona_survive_count+"\n"
    result += "-----------\n"
    result += "–ù–ê–ú –í–°–ï–ú –ü–ò–ó–î–ê!\n"

    bot.send_message(message.chat.id, result)
    
@bot.message_handler(commands=["corona_uk"])
def answer(message):
    req = Request("https://www.worldometers.info/coronavirus/country/ukraine", headers={'User-Agent': 'Mozilla/5.0'})
    resource = urllib.request.urlopen(req)
    content =  resource.read().decode(resource.headers.get_content_charset())
    corona_cases_count = re.search(r'Coronavirus Cases:[a-zA-Z<>\": 0-9\/\n=\-#]*>([0-9, ]*)<', content).group(1)
    corona_death_count = re.search(r'Deaths:[a-zA-Z<>\": 0-9\/\n=\-#]*>([0-9, ]*)<', content).group(1)
    corona_survive_count = re.search(r'Recovered:[a-zA-Z<>\": 0-9\/\n=\-#]*>([0-9, ]*)<', content).group(1)
    result = "–°–∏—Ç—É–∞—Ü–∏—è –≤ üá∫üá¶ –£–∫—Ä–∞–∏–Ω–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n"
    result += "ü¶† –ó–∞—Ä–∞–∂–µ–Ω–æ: "+corona_cases_count+"\n"
    result += "‚ò† –£–º–µ—Ä–ª–æ: "+corona_death_count+"\n"
    result += "Ôºã –í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: "+corona_survive_count+"\n"
    bot.send_message(message.chat.id, result)

@bot.message_handler(commands=["corona_ru"])
def answer(message):
    req = Request("https://www.worldometers.info/coronavirus/country/russia", headers={'User-Agent': 'Mozilla/5.0'})
    resource = urllib.request.urlopen(req)
    content =  resource.read().decode(resource.headers.get_content_charset())
    corona_cases_count = re.search(r'Coronavirus Cases:[a-zA-Z<>\": 0-9\/\n=\-#]*>([0-9, ]*)<', content).group(1)
    corona_death_count = re.search(r'Deaths:[a-zA-Z<>\": 0-9\/\n=\-#]*>([0-9, ]*)<', content).group(1)
    corona_survive_count = re.search(r'Recovered:[a-zA-Z<>\": 0-9\/\n=\-#]*>([0-9, ]*)<', content).group(1)
    result = "–°–∏—Ç—É–∞—Ü–∏—è –≤ üá∑üá∫ –†–æ—Å—Å–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n"
    result += "ü¶† –ó–∞—Ä–∞–∂–µ–Ω–æ: "+corona_cases_count+"\n"
    result += "‚ò† –£–º–µ—Ä–ª–æ: "+corona_death_count+"\n"
    result += "Ôºã –í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: "+corona_survive_count+"\n"
    bot.send_message(message.chat.id, result)
    
@bot.message_handler(commands=["whoisyourdaddy"])
def answer(message):
    cid = message.chat.id
    time.sleep(2)
    bot.send_message(cid, "–ú–µ–Ω—è –Ω–∞–ø–∏—Å–∞–ª - @Llne_R")

random_words = ["–Ø –∏—Å–ø–æ–ª—å–∑—É—é –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, —á—Ç–æ –±—ã –ø–æ–Ω–∏–º–∞—Ç—å —Ç–µ–±—è.",
    "Half-Life 3 –≤—ã–π–¥–µ—Ç –≤ 2023 –≥–æ–¥—É.",
    "FATAL EXCEPTION! Unknown command handled! -Err no. 290",
    "–í—ã –º–Ω–µ –æ—Ç–≤—Ä–∞—Ç–∏—Ç–µ–ª—å–Ω—ã!",
    "–ü—Ä–æ—Å—Ç–∏, –Ω–æ —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é.",
    "–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑–æ–∫.",
    "–•–º, –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è –≤ —á–∞—Ç–µ –µ—Å—Ç—å –¥–æ–ª–±–æ–µ–± –∏ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è —ç—Ç–æ —è–≤–Ω–æ –Ω–µ —è",
    "–í–∏–¥–∏—à—å —Å—É—Å–ª–∏–∫–∞?",
    "–û–ø—è—Ç—å —Ç—ã... –Ø —Å–∫–æ—Ä–æ —Ç–µ–±—è –±—É–¥—É –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å",
    "–ú–∞—Å—Å–æ–Ω—ã! –û–Ω–∏ —É–∂–µ –∑–¥–µ—Å—å! –ë–µ–≥–∏, –±–µ–≥–∏!!!",
    "–ï–±–∞—Ç—å –∫–∞–∫–æ–π —è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –¥–∞?",
    "–°—Ç–∞–≤—å –∫–∞—Å—Ç–æ–º –∏ –Ω–µ –µ–±–∏ –º–æ–∑–≥",
    "–´—ã—ã—ã...",
    "–°—Ç—Ä–∞–Ω–Ω–æ, –¥–∞?"]
@bot.message_handler(commands=["saysome"])
def answer(message):
	cid = message.chat.id
	bot.send_message(cid, random.choice(random_words))

@bot.message_handler(commands=['showgif'])
def answer(message):
    if database.checkUser("admins", message.from_user.username) == True:
        try:
            req = Request("http://www.gifporntube.com/gifs/"+str(random.randint(20, 2000))+".html", headers={'User-Agent': 'Mozilla/5.0'})
            resource = urllib.request.urlopen(req)
            content = resource.read().decode(resource.headers.get_content_charset())
            urls = re.findall('https?://(?:[-\w.]|(?:%[\da-fA-F]{2}))+([/a-z_0-9]*.mp4)', content)
            markdown = "[.](http://www.gifporntube.com" + str(urls[0]) + ")"
            bot.send_message(message.chat.id, markdown, parse_mode="Markdown")
        except:
            bot.send_message(message.chat.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
    else:
        bot.send_message(message.chat.id, "–î–æ—Å—Ç–ø—É–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤, —Å–æ—Å–∏ –±–∏–±—É")

@bot.message_handler(commands=['showpic'])
def send_photo(message):
    if database.checkUser("admins", message.from_user.username) == True:
        try:
            data = urllib.request.urlopen(
                "https://www.scrolller.com/media/" + str(random.randint(20, 2000)) + ".jpg").read()
            f = open('out.jpg', 'wb')
            f.write(data)
            f.close()
            img = open('out.jpg', 'rb')
            bot.send_photo(message.chat.id, img)
            img.close()
        except:
            bot.send_message(message.chat.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
    else:
        bot.send_message(message.chat.id, "–î–æ—Å—Ç–ø—É–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤, —Å–æ—Å–∏ –±–∏–±—É")

@bot.message_handler(commands=['finish_him'])
def answer(message):
        try:
            name = message.text.split(maxsplit=1)[1]
            if isOwner(name.replace("@", "")) == True:
                bot.send_message(message.chat.id, "–Ø —Ç–µ–±–µ —â–∞—Å –µ–±–ª–µ—Ç —Ä–∞–∑–æ—Ä–≤—É, –Ω–µ–ª—å–∑—è –≥–Ω–∞—Ç—å –Ω–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—è")
            else:
                bot.send_message(message.chat.id, getMAT(name.replace("@", "")))
        except:
            bot.send_message(message.chat.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")


def getMAT(name):
    req = Request("https://damn.ru/?name="+name+"&sex=m", headers={'User-Agent': 'Mozilla/5.0'})
    resource = urllib.request.urlopen(req)
    content = resource.read().decode(resource.headers.get_content_charset())
    querry = re.search(r'<div class="text">([a-zA-Z–∞-—è–ê-–Ø, –Å—ë]*)<span class=\"name\">'+name+'<\/span> &mdash;([a-zA-Z–∞-—è–ê-–Ø, –Å—ë]*)', content)
    return querry.group(1)+"@"+name+""+querry.group(2)

#while True:
#    text = input("Text:")
#    chat_id = -1001351933744
#    bot.send_message(chat_id, text)

bot.polling(interval=2)
